{"version":3,"file":"component---src-pages-archive-js-d41f11be740fdf43e093.js","mappings":"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","sources":["webpack://john-pratt.com/./src/pages/archive.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport { getSr } from '@utils/sr'; // ⬅️ changed\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\nimport { usePrefersReducedMotion } from '@hooks';\nimport SEO from '@components/head';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n  @media (max-width: 768px) { margin: 50px -10px; }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile { @media (max-width: 768px) { display: none; } }\n\n    tbody tr {\n      &:hover, &:focus { background-color: var(--light-navy); }\n    }\n\n    th, td {\n      padding: 10px; text-align: left;\n      &:first-child { padding-left: 20px; @media (max-width: 768px) { padding-left: 10px; } }\n      &:last-child  { padding-right: 20px; @media (max-width: 768px) { padding-right: 10px; } }\n      svg { width: 20px; height: 20px; }\n    }\n\n    tr {\n      cursor: default;\n      td:first-child { border-top-left-radius: var(--border-radius); border-bottom-left-radius: var(--border-radius); }\n      td:last-child  { border-top-right-radius: var(--border-radius); border-bottom-right-radius: var(--border-radius); }\n    }\n\n    td {\n      &.year { padding-right: 20px; @media (max-width: 768px) { padding-right: 10px; font-size: var(--fz-sm); } }\n      &.title { padding-top: 15px; padding-right: 20px; color: var(--lightest-slate); font-size: var(--fz-xl); font-weight: 600; line-height: 1.25; }\n      &.company { font-size: var(--fz-lg); white-space: nowrap; }\n      &.tech { font-size: var(--fz-xxs); font-family: var(--font-mono); line-height: 1.5;\n        .separator { margin: 0 5px; }\n        span { display: inline-block; } }\n      &.links { min-width: 100px;\n        div { display: flex; align-items: center;\n          a { ${({ theme }) => theme.mixins.flexCenter}; flex-shrink: 0; }\n          a + a { margin-left: 10px; } }\n      }\n    }\n  }\n`;\n\nconst ArchivePage = ({ location, data }) => {\n  const projects = data.allMarkdownRemark.edges;\n  const revealTitle = useRef(null);\n  const revealTable = useRef(null);\n  const revealProjects = useRef([]);\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    if (prefersReducedMotion) return;\n\n    let mounted = true;\n\n    (async () => {\n      const sr = await getSr(); // dynamically load scrollreveal on the client only\n      if (!mounted || !sr) return;\n\n      if (revealTitle.current) {\n        sr.reveal(revealTitle.current, srConfig());\n      }\n      if (revealTable.current) {\n        sr.reveal(revealTable.current, srConfig(200, 0));\n      }\n      revealProjects.current.forEach((ref, i) => {\n        if (ref) sr.reveal(ref, srConfig(i * 10));\n      });\n    })();\n\n    return () => {\n      mounted = false;\n    };\n  }, [prefersReducedMotion]);\n\n  return (\n    <Layout location={location}>\n      <main>\n        <header ref={revealTitle}>\n          <h1 className=\"big-heading\">Archive</h1>\n          <p className=\"subtitle\">A big list of things I've worked on</p>\n        </header>\n\n        <StyledTableContainer ref={revealTable}>\n          <table>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Title</th>\n                <th className=\"hide-on-mobile\">Made at</th>\n                <th className=\"hide-on-mobile\">Built with</th>\n                <th>Link</th>\n              </tr>\n            </thead>\n            <tbody>\n              {projects.length > 0 &&\n                projects.map(({ node }, i) => {\n                  const { date, github, external, ios, android, title, tech, company } =\n                    node.frontmatter;\n                  return (\n                    <tr key={i} ref={el => (revealProjects.current[i] = el)}>\n                      <td className=\"overline year\">{new Date(date).getFullYear().toString()}</td>\n\n                      <td className=\"title\">{title}</td>\n\n                      <td className=\"company hide-on-mobile\">\n                        {company ? <span>{company}</span> : <span>—</span>}\n                      </td>\n\n                      <td className=\"tech hide-on-mobile\">\n                        {tech?.length > 0 &&\n                          tech.map((item, j) => (\n                            <span key={j}>\n                              {item}\n                              {j !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\n                            </span>\n                          ))}\n                      </td>\n\n                      <td className=\"links\">\n                        <div>\n                          {external && (\n                            <a href={external} aria-label=\"External Link\">\n                              <Icon name=\"External\" />\n                            </a>\n                          )}\n                          {github && (\n                            <a href={github} aria-label=\"GitHub Link\">\n                              <Icon name=\"GitHub\" />\n                            </a>\n                          )}\n                          {ios && (\n                            <a href={ios} aria-label=\"Apple App Store Link\">\n                              <Icon name=\"AppStore\" />\n                            </a>\n                          )}\n                          {android && (\n                            <a href={android} aria-label=\"Google Play Store Link\">\n                              <Icon name=\"PlayStore\" />\n                            </a>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </StyledTableContainer>\n      </main>\n    </Layout>\n  );\n};\n\nArchivePage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default ArchivePage;\n\nexport function Head({ location }) {\n  return (\n    <SEO\n      title=\"Archive\"\n      description=\"A big list of things I've worked on\"\n      pathname={location?.pathname}\n    />\n  );\n}\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" } }\n      sort: {frontmatter: {date: DESC}}\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"names":["StyledTableContainer","styled","div","withConfig","componentId","_ref","theme","mixins","flexCenter","Head","_ref4","location","React","SEO","title","description","pathname","_ref2","data","projects","allMarkdownRemark","edges","revealTitle","useRef","revealTable","revealProjects","prefersReducedMotion","usePrefersReducedMotion","useEffect","mounted","sr","getSr","current","reveal","srConfig","forEach","ref","i","Layout","className","length","map","_ref3","node","date","github","external","ios","android","tech","company","frontmatter","key","el","Date","getFullYear","toString","item","j","href","Icon","name"],"sourceRoot":""}